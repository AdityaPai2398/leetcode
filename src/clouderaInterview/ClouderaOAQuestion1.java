package clouderaInterview;

/**
 * ç¬¬ä¸€é¢˜ï¼ŒæŠŠä¸€ä¸ªintegerçš„æ•°å­—é¡ºåº?æ‰“ä¹±å?Žå¾—åˆ°çš„æ–°çš„integerå?«å?šè¯¥integerçš„sibling   æ¯”å¦‚ 123å’Œ231ï¼Œ132ï¼Œ213ï¼Œ321éƒ½æ˜¯siblingï¼Œä½†å’Œ222å°±ä¸?æ˜¯ã€‚
å†™ä¸ªç¨‹åº?æ‰¾ä¸€ä¸ªintegerçš„æ‰€æœ‰siblingé‡Œé?¢æœ€å¤§çš„ã€‚æ¯”å¦‚ä¸Šé?¢é‚£ä¸ªä¾‹å­?è¿”å›ž321.
æˆ‘çš„æ€?è·¯å°±æ˜¯æŠŠintegerå¼„æˆ?string å†?è½¬æˆ?char arrayï¼Œç„¶å?Žsortä¸€ä¸‹ï¼Œå†?è½¬å›žintegerã€‚æ³¨æ„?æœ€å?Žçš„integerå?¯èƒ½ä¼šæº¢å‡ºï¼Œæ‰€ä»¥æŸ¥çœ‹edge case

public static int solution(int N){
                long result=0;
                String s=String.valueOf(N);
                char[] c= s.toCharArray();
                Arrays.sort(c);
                for(int i=c.length-1;i>=0;i--){
                        result=result*10+(int)(c[i]-'0');
                }
                if(result>Integer.MAX_VALUE){
                        return Integer.MAX_VALUE;
                }else{
                        return (int)result;
                }                
        }
 */

public class ClouderaOAQuestion1
{

	public ClouderaOAQuestion1( )
	{
		// TODO Auto-generated constructor stub
	}

}
